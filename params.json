{"note":"Don't delete this file! It's used internally to help with page regeneration.","google":"UA-17977786-3","name":"Semargl","body":"Welcome to the home of Semargl!\r\n===============================\r\n\r\nSemargl is a modular framework for crawling linked data from structured documents.\r\nThe main goal of project is to provide lightweight and performant tool without excess dependencies.\r\n\r\nAt this moment it offers streaming parsers for:\r\n* RDFa 1.0 and 1.1\r\n* RDF/XML\r\n* NTriples\r\n\r\nWhy use Semargl?\r\n================\r\n\r\nLightweight\r\n-----------\r\n\r\nSemarglâ€™s code is small and simple to understand. It will never [read a mail](http://en.wikipedia.org/wiki/Zawinski's_law_of_software_envelopment).\r\nInternally it operates with raw strings and creates as few objects as possible, so your Android projects will be happy.\r\n\r\nStandard-conformant\r\n-------------------\r\n\r\nFramework conforms corresponding W3C standards for IRI's, RDF, RDFa and so on. All code base is covered\r\nwith tests made by W3C, RDF Web Applications Working Group and Jena ARP project.\r\n\r\nDead Simple\r\n-----------\r\n\r\nNo jokes!\r\n\r\n    // just init triple sink you want\r\n    Model model = ModelFactory.createDefaultModel();\r\n    TripleSink sink = new JenaTripleSink(model);\r\n    // create processing pipe\r\n    DataProcessor<Reader> dp = new SaxSource(XMLReaderFactory.createXMLReader())\r\n            .streamingTo(new RdfXmlParser()\r\n                    .streamingTo(sink).build();\r\n    // and run it!\r\n    dp.process(new FileReader(file), docUri);\r\n\r\nSemargl works out of the box with Android applications and frameworks such as Apache Jena and Apache Clerezza.\r\nSee examples dir for more info (JavaDocs coming soon).\r\n\r\nWhat Semargl is not\r\n===================\r\n\r\nIt's not a validator of any kind.\r\n\r\nIt's not a triple store (but it provides bridges to other ones).\r\n\r\nIt's not a framework with stable API (and won't be until major release).\r\n\r\nSupported data formats\r\n======================\r\n\r\nRDF/XML\r\n-------\r\n\r\nImplementation covered by tests from Jena ARQ project. Btw it outperforms Jena parser even if you load triples\r\nto Jena model. Benchmark located in examples folder.\r\n\r\nRDFa\r\n----\r\n\r\nRDFa parser currently passes all RDFa 1.0 and 1.1 [conformance](http://rdfa.info/test-suite/) tests for\r\nall document formats. Document format detection works out-of-the-box, so you shouldn't worry about specifying\r\ndocument format. RDFa version detection is also present with default version 1.1.\r\n\r\nNTriples\r\n--------\r\n\r\nImplementation covered by tests from Jena ARQ project.\r\n\r\nBuild\r\n=====\r\n\r\nTo build framework run mvn install. At some stage RDFa tests will download large dataset from rdfa.info, be patient.\r\n","tagline":"Crawling linked data from structured documents"}