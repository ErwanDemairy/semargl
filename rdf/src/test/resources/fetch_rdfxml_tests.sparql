prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>
prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>
prefix test: <http://www.w3.org/2000/10/rdf-tests/rdfcore/testSchema#>
		
select ?input ?result (?input as ?name) {
{
	?test_case a test:PositiveParserTest;
		test:outputDocument ?result;
		test:inputDocument ?input;
		test:status ?status;
		a ?type.
	optional {?test_case test:description ?descr}
	?input a test:RDF-XML-Document.

	filter (?status != "OBSOLETE" && ?status != "NOT_APPROVED")

    # parser produces valid output, but tests fail because XMLLiterals can't be compared like plain strings
	filter (!regex(str(?input), "rdfms-xml-literal-namespaces/test002.rdf"))
	filter (!regex(str(?input), "xml-literals/html.rdf"))
	filter (!regex(str(?input), "xml-literals/reported1.rdf"))
	filter (!regex(str(?input), "xml-literals/reported2.rdf"))
	filter (!regex(str(?input), "xml-literals/reported3.rdf"))
	filter (!regex(str(?input), "i18n/t9000.rdf"))
}
union
{
	?test_case a test:NegativeParserTest;
		test:inputDocument ?input;
		test:status ?status;
		a ?type.
	optional {?test_case test:description ?descr}
	?input a test:RDF-XML-Document.

	filter (?status != "OBSOLETE" && ?status != "NOT_APPROVED")
}
}order by ?input